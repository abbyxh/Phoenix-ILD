"use strict";(self.webpackChunkphoenix_for_ild=self.webpackChunkphoenix_for_ild||[]).push([[316],{4316:(_,r,n)=>{n.r(r),n.d(r,{TArrowPainter:()=>d});var o=n(467),l=n(2695),f=n(9025);class d extends l.TLinePainter{rotate(t,i,e){let s=this.wsize*Math.cos(t),h=this.wsize*Math.sin(t),a="";return void 0!==i&&void 0!==e?a=`M${Math.round(i-s)},${Math.round(e-h)}`:(s=-s,h=-h),a+=`l${Math.round(s)},${Math.round(h)}`,i&&void 0===e&&(a+="z"),a}createPath(){const t=Math.atan2(this.y2-this.y1,this.x2-this.x1),i=this.wsize*Math.cos(this.angle2),e=i*Math.cos(t),s=i*Math.sin(t);let h="";return this.beg&&(h+=this.rotate(t-Math.PI-this.angle2,this.x1,this.y1)+this.rotate(t-Math.PI+this.angle2,this.beg>10)),this.mid%10==2&&(h+=this.rotate(t-Math.PI-this.angle2,(this.x1+this.x2-e)/2,(this.y1+this.y2-s)/2)+this.rotate(t-Math.PI+this.angle2,this.mid>10)),this.mid%10==1&&(h+=this.rotate(t-this.angle2,(this.x1+this.x2+e)/2,(this.y1+this.y2+s)/2)+this.rotate(t+this.angle2,this.mid>10)),this.end&&(h+=this.rotate(t-this.angle2,this.x2,this.y2)+this.rotate(t+this.angle2,this.end>10)),`M${Math.round(this.x1+(this.beg>10?e:0))},${Math.round(this.y1+(this.beg>10?s:0))}L${Math.round(this.x2-(this.end>10?e:0))},${Math.round(this.y2-(this.end>10?s:0))}`+h}prepareDraw(){super.prepareDraw();const t=this.getObject(),i=t.fOption,e=this.getPadPainter().getPadRect();this.wsize=Math.max(3,Math.round(Math.max(e.width,e.height)*t.fArrowSize*.8)),this.angle2=t.fAngle/2/180*Math.PI,this.beg=this.mid=this.end=0,0===i.indexOf("<")&&(this.beg=0===i.indexOf("<|")?12:2),i.indexOf("->-")>=0?this.mid=1:i.indexOf("-|>-")>=0?this.mid=11:i.indexOf("-<-")>=0?this.mid=2:i.indexOf("-<|-")>=0&&(this.mid=12);const s=i.lastIndexOf(">"),h=i.lastIndexOf("|>"),a=i.length;s>=0&&s===a-1&&(this.end=h>=0&&h===a-2?11:1),this.createAttFill({attr:t})}addExtras(t){this.beg>10||this.end>10?t.call(this.fillatt.func):t.style("fill","none")}static draw(t,i,e){return(0,o.A)(function*(){const s=new d(t,i,e);return(0,f.ensureTCanvas)(s,!1).then(()=>s.redraw())})()}}}}]);